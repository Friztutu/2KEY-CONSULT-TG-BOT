from aiogram import types, Router, F
from aiogram.filters import CommandStart, Command

import src.keyboards as kb

router = Router()

@router.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}. "
                         f"–ú—ã –∫–æ–º–∞–Ω–¥–∞ 2KEY CONSULT -  —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏ Wildberries, –û–ó–û–ù. "
                         f"–£ –Ω–∞—Å –∑–∞ –ø–ª–µ—á–∞–º–∏ - 2 –≥–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã. \n"
                         f"–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –í–∞–º –ª—É—á—à–µ —É–∑–Ω–∞—Ç—å –Ω–∞—Å. \n"
                         f"–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º @key2consult ", reply_markup=kb.start_keyboard)

@router.callback_query(F.data == "start")
async def cmb_start_(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {callback_query.message.from_user.first_name}. "
                         f"–ú—ã –∫–æ–º–∞–Ω–¥–∞ 2KEY CONSULT -  —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏ Wildberries, –û–ó–û–ù. "
                         f"–£ –Ω–∞—Å –∑–∞ –ø–ª–µ—á–∞–º–∏ - 2 –≥–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã. \n"
                         f"–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –í–∞–º –ª—É—á—à–µ —É–∑–Ω–∞—Ç—å –Ω–∞—Å. \n"
                         f"–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º @key2consult ", reply_markup=kb.start_keyboard)

@router.callback_query(F.data == "About Wb")
async def cmd_about_wb(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ö–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ WB", reply_markup=kb.about_wb_keyboard)

@router.callback_query(F.data == "About Ozon")
async def cmb_about_ozon(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ö–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ Ozon", reply_markup=kb.about_ozon_keyboard)

@router.callback_query(F.data == "Achivements Ozon")
async def cmb_ozon_achivements(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ú—ã —Ç–∞–∫–∏–µ –ø–∏–∑–¥–∞—Ç—ã–µ –Ω–∞ Ozon", reply_markup=kb.ozon_keyboard)

@router.callback_query(F.data == "Competencies Ozon")
async def cmb_ozon_competencies(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ú—ã —Ç–∞–∫–∏–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–µ –Ω–∞ Ozon", reply_markup=kb.ozon_keyboard)

@router.callback_query(F.data == "Achivements Wb")
async def cmb_ozon_achivements(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ú—ã —Ç–∞–∫–∏–µ –ø–∏–∑–¥–∞—Ç—ã–µ –Ω–∞ Wb", reply_markup=kb.wb_keyboard)

@router.callback_query(F.data == "Competencies Wb")
async def cmb_ozon_competencies(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ú—ã —Ç–∞–∫–∏–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–µ –Ω–∞ Wb", reply_markup=kb.wb_keyboard)

@router.callback_query(F.data == "register")
async def cmb_choice_market(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text("–ö–∞–∫–æ–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", reply_markup=kb.choice_market_keyboard)

@router.message(Command("reg"))
async def cmb_choice_market(message: types.Message):
    await message.answer("–ö–∞–∫–æ–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", reply_markup=kb.choice_market_keyboard)

@router.message()
async def cmb_echo(message: types.Message):
    await message.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n"
                         "\n"
                         "/start - üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\n"
                         "/reg - üìå –¢–∞—Ä–∏—Ñ—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å\n"
                         "\n"
                         "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º @key2consult")
